using Spectre.Console;

namespace Labb3_Anropa_databasen;

public class Menus
{



// - [ ]  L칛gga till nya elever (kan l칬sas med [ADO.NET](http://ADO.NET) och SQL, annars Entity framework)
//         Anv칛ndaren f친r m칬jlighet att mata in uppgifter om en ny elev och den datan sparas d친 ner i databasen.

// - [ ]  L칛gga till ny personal (ska l칬sas genom Entity framework)
// Anv칛ndaren f친r m칬jlighet att mata in uppgifter om en ny anst칛lld och den data sparas d친 ner i databasen.
    public static void DisplayMainMenu()
    {
        var choice = AnsiConsole.Prompt(
            new SelectionPrompt<string>()
                .Title("Please select an option from the list.")
                .PageSize(10)
                .AddChoices("Display Staff", "Display Students", "Display Courses", "Add Student", "Add Staff"));

        switch (choice)
        {
            case "Display Staff":
                DisplayStaff();
                break;
            case "Display Students":
                DisplayStudents();
                break;
            case "Display Courses":
                DisplayCourses();
                break;
            case "Add Student":
                AddStudent();
                break;
            case "Add Staff":
                AddStaff();
                break;
            case "Exit":
                return;
        }
    }

    public static void DisplayStaff()
    {
        // - [ ]  H칛mta personal (kan l칬sas med [ADO.NET](http://ADO.NET) och SQL, annars Entity framework)
// Anv칛ndaren f친r v칛lja om denna vill se alla anst칛llda, eller bara inom en av kategorierna s친 som ex l칛rare.

    }
    public static void DisplayStudents()
    {
        // - [ ]  H칛mta alla elever (ska l칬sas med Entity framework)
// Anv칛ndaren f친r v칛lja om de vill se eleverna sorterade p친 f칬r- eller efternamn och om det ska vara stigande eller fallande sortering.

// - [ ]  H칛mta alla elever i en viss klass (ska l칬sas med Entity framework)
// Anv칛ndaren ska f칬rst f친 se en lista med alla klasser som finns, sedan f친r anv칛ndaren v칛lja en av klasserna och d친 skrivs alla elever i den klassen ut.

//     游끥 Extra utmaning (Frivillig): l친t anv칛ndaren 칛ven f친 v칛lja sortering p친 eleverna som i punkten ovan.
// - [ ]  H칛mta alla betyg som satts den senaste m친naden (kan l칬sas med [ADO.NET](http://ADO.NET) och SQL, annars Entity framework)
//         H칛r f친r anv칛ndaren direkt en lista med alla betyg som satts senaste m친naden d칛r elevens namn, kursens namn och betyget framg친r.

    }

    public static void DisplayCourses()
    {
        // - [ ]  H칛mta en lista med alla kurser och det snittbetyg som eleverna f친tt p친 den kursen samt det h칬gsta och l칛gsta betyget som n친gon f친tt i kursen (kan l칬sas med [ADO.NET](http://ADO.NET) och SQL, annars Entity framework)
//         H칛r f친r anv칛ndaren direkt upp en lista med alla kurser i databasen, snittbetyget samt det h칬gsta och l칛gsta betyget f칬r varje kurs.
//             游눠 Tips: Det kan vara sv친rt att g칬ra detta med betyg i form av bokst칛ver s친 du kan v칛lja att lagra betygen som siffror ist칛llet.

    }

    public static void AddStudent()
    {
        
    }

    public static void AddStaff()
    {
        
    }
}