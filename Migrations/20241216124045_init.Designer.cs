// <auto-generated />
using System;
using Labb3_Anropa_databasen.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Labb3_Anropa_databasen.Migrations
{
    [DbContext(typeof(SchoolDbContext))]
    [Migration("20241216124045_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Labb3_Anropa_databasen.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CourseID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("CourseId")
                        .HasName("PK__Courses__C92D7187092125E3");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Labb3_Anropa_databasen.Models.Employee", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TeacherID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacherId"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateOnly?>("HireDate")
                        .HasColumnType("date");

                    b.Property<string>("LastName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Role")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Subject")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("TeacherId")
                        .HasName("PK__Employee__EDF259446484B98E");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Labb3_Anropa_databasen.Models.Enrollment", b =>
                {
                    b.Property<int>("EnrollmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EnrollmentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnrollmentId"));

                    b.Property<int?>("CourseIdFk")
                        .HasColumnType("int")
                        .HasColumnName("CourseID_FK");

                    b.Property<int?>("StudentIdFk")
                        .HasColumnType("int")
                        .HasColumnName("StudentID_FK");

                    b.Property<int?>("TeacherIdFk")
                        .HasColumnType("int")
                        .HasColumnName("TeacherID_FK");

                    b.HasKey("EnrollmentId")
                        .HasName("PK__Enrollme__7F6877FB137C6997");

                    b.HasIndex("CourseIdFk");

                    b.HasIndex("StudentIdFk");

                    b.HasIndex("TeacherIdFk");

                    b.ToTable("Enrollments");
                });

            modelBuilder.Entity("Labb3_Anropa_databasen.Models.Grade", b =>
                {
                    b.Property<int>("GradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("GradeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GradeId"));

                    b.Property<int?>("EnrollmentIdFk")
                        .HasColumnType("int")
                        .HasColumnName("EnrollmentID_FK");

                    b.Property<DateOnly?>("GradeSetDate")
                        .HasColumnType("date");

                    b.Property<int?>("NumericGrade")
                        .HasColumnType("int");

                    b.Property<int?>("TeacherIdFk")
                        .HasColumnType("int")
                        .HasColumnName("TeacherID_FK");

                    b.HasKey("GradeId")
                        .HasName("PK__Grades__54F87A373D838EFB");

                    b.HasIndex("EnrollmentIdFk");

                    b.HasIndex("TeacherIdFk");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("Labb3_Anropa_databasen.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StudentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("EnrollmentDate")
                        .HasColumnType("date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<DateOnly?>("GraduationDate")
                        .HasColumnType("date");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("StudentId")
                        .HasName("PK__Students__32C52A7968C72E03");

                    b.ToTable("Students", t =>
                        {
                            t.HasTrigger("trg_SetGradeSetDate");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("Labb3_Anropa_databasen.Models.Enrollment", b =>
                {
                    b.HasOne("Labb3_Anropa_databasen.Models.Course", "CourseIdFkNavigation")
                        .WithMany("Enrollments")
                        .HasForeignKey("CourseIdFk")
                        .HasConstraintName("FK__Enrollmen__Cours__2E1BDC42");

                    b.HasOne("Labb3_Anropa_databasen.Models.Student", "StudentIdFkNavigation")
                        .WithMany("Enrollments")
                        .HasForeignKey("StudentIdFk")
                        .HasConstraintName("FK__Enrollmen__Stude__2D27B809");

                    b.HasOne("Labb3_Anropa_databasen.Models.Employee", "TeacherIdFkNavigation")
                        .WithMany("Enrollments")
                        .HasForeignKey("TeacherIdFk")
                        .HasConstraintName("FK__Enrollmen__Teach__2F10007B");

                    b.Navigation("CourseIdFkNavigation");

                    b.Navigation("StudentIdFkNavigation");

                    b.Navigation("TeacherIdFkNavigation");
                });

            modelBuilder.Entity("Labb3_Anropa_databasen.Models.Grade", b =>
                {
                    b.HasOne("Labb3_Anropa_databasen.Models.Enrollment", "EnrollmentIdFkNavigation")
                        .WithMany("Grades")
                        .HasForeignKey("EnrollmentIdFk")
                        .HasConstraintName("FK__Grades__Enrollme__34C8D9D1");

                    b.HasOne("Labb3_Anropa_databasen.Models.Employee", "TeacherIdFkNavigation")
                        .WithMany("Grades")
                        .HasForeignKey("TeacherIdFk")
                        .HasConstraintName("FK__Grades__TeacherI__35BCFE0A");

                    b.Navigation("EnrollmentIdFkNavigation");

                    b.Navigation("TeacherIdFkNavigation");
                });

            modelBuilder.Entity("Labb3_Anropa_databasen.Models.Course", b =>
                {
                    b.Navigation("Enrollments");
                });

            modelBuilder.Entity("Labb3_Anropa_databasen.Models.Employee", b =>
                {
                    b.Navigation("Enrollments");

                    b.Navigation("Grades");
                });

            modelBuilder.Entity("Labb3_Anropa_databasen.Models.Enrollment", b =>
                {
                    b.Navigation("Grades");
                });

            modelBuilder.Entity("Labb3_Anropa_databasen.Models.Student", b =>
                {
                    b.Navigation("Enrollments");
                });
#pragma warning restore 612, 618
        }
    }
}
